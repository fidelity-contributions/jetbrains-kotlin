FILE fqName:org.jetbrains.kotlinx.dataframe.annotations fileName:/dataSchemaSourceDeclaration.kt
  CLASS ANNOTATION_CLASS name:DataSchemaSource modality:OPEN visibility:public superTypes:[kotlin.Annotation]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.DataSchemaSource
    CONSTRUCTOR visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.DataSchemaSource [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ANNOTATION_CLASS name:DataSchemaSource modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Annotation
FILE fqName:org.jetbrains.kotlinx.dataframe.annotations fileName:/importedSchema.kt
  CLASS INTERFACE name:Schema modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    annotations:
      DataSchemaSource
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.Schema
    CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:deepGroup modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col2> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:ABSTRACT [val]
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col3> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:ABSTRACT [val]
    CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:frame modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.Schema.frame
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col3> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.frame
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:ABSTRACT [val]
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col4> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.frame
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:ABSTRACT [val]
    CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:group modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.Schema.group
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.group
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:ABSTRACT [val]
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col1> visibility:public modality:ABSTRACT returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.group
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:ABSTRACT [val]
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:ABSTRACT [val]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-deepGroup> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.group
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:ABSTRACT [val]
    CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<org.jetbrains.kotlinx.dataframe.annotations.Schema>]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
      PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] name:schemaKType visibility:public modality:FINAL [val]
        overridden:
          public abstract schemaKType: kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
        FIELD PROPERTY_BACKING_FIELD name:schemaKType type:kotlin.reflect.KType visibility:private [final]
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-schemaKType> visibility:public modality:FINAL returnType:kotlin.reflect.KType
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
          correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] name:schemaKType visibility:public modality:FINAL [val]
          overridden:
            public abstract fun <get-schemaKType> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-schemaKType> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion'
              CALL 'public final fun typeOf <T> (): kotlin.reflect.KType declared in kotlin.reflect' type=kotlin.reflect.KType origin=null
                TYPE_ARG T: org.jetbrains.kotlinx.dataframe.annotations.Schema
      CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<org.jetbrains.kotlinx.dataframe.annotations.Schema>]' type=org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
      FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] name:default visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
        overridden:
          public abstract fun default (): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider> declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun default (): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion'
            TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema>
              CALL 'public open fun default (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
                ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (typeClashTactic: org.jetbrains.kotlinx.dataframe.io.JSON.TypeClashTactic, keyValuePaths: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.api.JsonPath>, unifyNumbers: kotlin.Boolean) declared in org.jetbrains.kotlinx.dataframe.io.JSON' type=org.jetbrains.kotlinx.dataframe.io.JSON origin=null
                ARG path: CONST String type=kotlin.String value="test.json"
      FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] name:read visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
        VALUE_PARAMETER GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] kind:Regular name:path index:1 type:kotlin.String
        overridden:
          public abstract fun read (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider> declared in org.jetbrains.kotlinx.dataframe.io.DataFrameProvider
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun read (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion'
            TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema>
              CALL 'public abstract fun read (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
                ARG <this>: CONSTRUCTOR_CALL 'public constructor <init> (typeClashTactic: org.jetbrains.kotlinx.dataframe.io.JSON.TypeClashTactic, keyValuePaths: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.api.JsonPath>, unifyNumbers: kotlin.Boolean) declared in org.jetbrains.kotlinx.dataframe.io.JSON' type=org.jetbrains.kotlinx.dataframe.io.JSON origin=null
                ARG path: GET_VAR 'path: kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion.read' type=kotlin.String origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-frame> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema
        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:ABSTRACT [val]
    PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-group> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema
        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:ABSTRACT [val]
    PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-id> visibility:public modality:ABSTRACT returnType:kotlin.Int
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema
        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:ABSTRACT [val]
    PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-lastName> visibility:public modality:ABSTRACT returnType:kotlin.String
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.Schema
        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:ABSTRACT [val]
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
        CONST String type=kotlin.String value="OK"
  FUN name:compile visibility:public modality:FINAL returnType:kotlin.Unit
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public final fun read (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
          ARG <this>: GET_OBJECT 'CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.ImportedSchemaCompanionKey] OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<org.jetbrains.kotlinx.dataframe.annotations.Schema>]' type=org.jetbrains.kotlinx.dataframe.annotations.Schema.Companion
          ARG path: CONST String type=kotlin.String value="path/to/file"
  FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
    VALUE_PARAMETER kind:Regular name:df index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema>
    BLOCK_BODY
      VAR name:i type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> [val]
        CALL 'public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=GET_PROPERTY
          ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
      VAR name:str type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> [val]
        CALL 'public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=GET_PROPERTY
          ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
      VAR name:rowI type:kotlin.Int [val]
        CALL 'public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations' type=kotlin.Int origin=GET_PROPERTY
          ARG <this>: CALL 'public abstract fun get (index: kotlin.Int): org.jetbrains.kotlinx.dataframe.DataRow<T of org.jetbrains.kotlinx.dataframe.DataFrame> declared in org.jetbrains.kotlinx.dataframe.DataFrame' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=GET_ARRAY_ELEMENT
            ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
            ARG index: CONST Int type=kotlin.Int value=0
      VAR name:rowStr type:kotlin.String [val]
        CALL 'public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations' type=kotlin.String origin=GET_PROPERTY
          ARG <this>: CALL 'public abstract fun get (index: kotlin.Int): org.jetbrains.kotlinx.dataframe.DataRow<T of org.jetbrains.kotlinx.dataframe.DataFrame> declared in org.jetbrains.kotlinx.dataframe.DataFrame' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=GET_ARRAY_ELEMENT
            ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
            ARG index: CONST Int type=kotlin.Int value=0
      VAR name:gr type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> [val]
        CALL 'public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=GET_PROPERTY
          ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
      VAR name:fr type:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> [val]
        CALL 'public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> origin=GET_PROPERTY
          ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
      VAR name:str1 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> [val]
        CALL 'public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=GET_PROPERTY
          ARG <this>: CALL 'public final fun <get-deepGroup> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=GET_PROPERTY
            ARG <this>: CALL 'public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations' type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=GET_PROPERTY
              ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
      VAR name:df1 type:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> [val]
        CALL 'public final fun let <T, R> (<this>: T of kotlin.let, block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> origin=null
          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int>
          TYPE_ARG R: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41>
          ARG <this>: CALL 'public final fun convert <T, C> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.convert>, columns: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<T of org.jetbrains.kotlinx.dataframe.api.convert>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<T of org.jetbrains.kotlinx.dataframe.api.convert>, org.jetbrains.kotlinx.dataframe.columns.ColumnsResolver<C of org.jetbrains.kotlinx.dataframe.api.convert>>): org.jetbrains.kotlinx.dataframe.api.Convert<T of org.jetbrains.kotlinx.dataframe.api.convert, C of org.jetbrains.kotlinx.dataframe.api.convert> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int> origin=null
            TYPE_ARG T: org.jetbrains.kotlinx.dataframe.annotations.Schema
            TYPE_ARG C: kotlin.Int
            ARG <this>: GET_VAR 'df: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
            ARG columns: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>, org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>, org.jetbrains.kotlinx.dataframe.columns.ColumnsResolver<kotlin.Int>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnsResolver<kotlin.Int>
                VALUE_PARAMETER kind:ExtensionReceiver name:$this$convert index:0 type:org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>
                VALUE_PARAMETER kind:Regular name:it index:1 type:org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> ($this$convert: org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>, it: org.jetbrains.kotlinx.dataframe.api.ColumnsSelectionDsl<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.columns.ColumnsResolver<kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations.test'
                    GET_VAR 'val i: org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=null
          ARG block: FUN_EXPR type=kotlin.Function1<org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int>, org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41>
              VALUE_PARAMETER GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] kind:Regular name:it index:0 type:org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int>
              BLOCK_BODY
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Schema_41I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Schema_41I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:frame visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 3)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-frame> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:frame visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:group visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 2)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-group> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:group visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:id visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 0)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-id> visibility:public modality:ABSTRACT returnType:kotlin.Int
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:id visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:lastName visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 1)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-lastName> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:lastName visibility:public modality:ABSTRACT [val]
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:id type:kotlin.Int visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-id> visibility:public modality:FINAL returnType:kotlin.Int
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_id")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.Int from='public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-id>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG name: CONST String type=kotlin.String value="id"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:id type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-id> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_id")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> from='public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-id>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG columnName: CONST String type=kotlin.String value="id"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:lastName type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-lastName> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_lastName")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-lastName>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG name: CONST String type=kotlin.String value="lastName"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:lastName type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-lastName> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_lastName")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-lastName>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG columnName: CONST String type=kotlin.String value="lastName"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:group type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-group> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_group")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> from='public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-group>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG name: CONST String type=kotlin.String value="group"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:group type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-group> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_group")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> from='public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-group>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG columnName: CONST String type=kotlin.String value="group"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:frame type:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-frame> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_frame")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> from='public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-frame>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG name: CONST String type=kotlin.String value="frame"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:frame type:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-frame> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>
                      annotations:
                        JvmName(name = "_frame")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> from='public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0.<get-frame>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I> origin=null
                              ARG columnName: CONST String type=kotlin.String value="frame"
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Frame_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Frame_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col3 visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 0)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col3> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col3 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col4 visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 1)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col4> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col4 visibility:public modality:ABSTRACT [val]
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope3 modality:FINAL visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col3 type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      annotations:
                        JvmName(name = "_col3")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3.<get-col3>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col3"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col3 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      annotations:
                        JvmName(name = "_col3")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3.<get-col3>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col3"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col4 type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col4> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      annotations:
                        JvmName(name = "_col4")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col4> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3.<get-col4>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col4"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col4 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col4> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>
                      annotations:
                        JvmName(name = "_col4")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col4> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3.<get-col4>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col4"
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope3 modality:FINAL visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Group_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Group_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 0)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col1 visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 1)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col1> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col1 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:deepGroup visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 2)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-deepGroup> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:deepGroup visibility:public modality:ABSTRACT [val]
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope1 modality:FINAL visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_col")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-col>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_col")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-col>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col1 type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col1> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_col1")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col1> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-col1>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col1"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col1 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col1> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_col1")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col1> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-col1>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col1"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:deepGroup type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-deepGroup> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_deepGroup")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> from='public final fun <get-deepGroup> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-deepGroup>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG name: CONST String type=kotlin.String value="deepGroup"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:deepGroup type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-deepGroup> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>
                      annotations:
                        JvmName(name = "_deepGroup")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> from='public final fun <get-deepGroup> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1.<get-deepGroup>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="deepGroup"
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope1 modality:FINAL visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:DeepGroup_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:DeepGroup_041 modality:ABSTRACT visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col2 visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 0)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col2> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col2 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col3 visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 1)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-col3> visibility:public modality:ABSTRACT returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:col3 visibility:public modality:ABSTRACT [val]
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope2 modality:FINAL visibility:local superTypes:[kotlin.Any]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col2 type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col2> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      annotations:
                        JvmName(name = "_col2")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col2> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2.<get-col2>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col2"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col2 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col2> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      annotations:
                        JvmName(name = "_col2")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col2> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2.<get-col2>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col2"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col3 type:kotlin.String visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:kotlin.String
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      annotations:
                        JvmName(name = "_col3")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=kotlin.String from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2'
                          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2.<get-col3>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=null
                              ARG name: CONST String type=kotlin.String value="col3"
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:col3 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>
                      annotations:
                        JvmName(name = "_col3")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
                            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
                              ARG <this>: GET_VAR '<this>(index:1): org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2.<get-col3>' type=org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.DeepGroup_041> origin=null
                              ARG columnName: CONST String type=kotlin.String value="col3"
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Scope2 modality:FINAL visibility:local superTypes:[kotlin.Any]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Schema_41 modality:ABSTRACT visibility:local superTypes:[org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I]
                  thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] visibility:public returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] CLASS name:Schema_41 modality:ABSTRACT visibility:local superTypes:[org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I]' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                    VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                    overridden:
                      public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  PROPERTY FAKE_OVERRIDE name:frame visibility:public modality:ABSTRACT [fake_override,val]
                    annotations:
                      Order(order = 3)
                    overridden:
                      public abstract frame: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                    FUN FAKE_OVERRIDE name:<get-frame> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> [fake_override]
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY FAKE_OVERRIDE name:frame visibility:public modality:ABSTRACT [fake_override,val]
                      overridden:
                        public abstract fun <get-frame> (): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  PROPERTY FAKE_OVERRIDE name:group visibility:public modality:ABSTRACT [fake_override,val]
                    annotations:
                      Order(order = 2)
                    overridden:
                      public abstract group: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                    FUN FAKE_OVERRIDE name:<get-group> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> [fake_override]
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY FAKE_OVERRIDE name:group visibility:public modality:ABSTRACT [fake_override,val]
                      overridden:
                        public abstract fun <get-group> (): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  PROPERTY FAKE_OVERRIDE name:id visibility:public modality:ABSTRACT [fake_override,val]
                    annotations:
                      Order(order = 0)
                    overridden:
                      public abstract id: kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                    FUN FAKE_OVERRIDE name:<get-id> visibility:public modality:ABSTRACT returnType:kotlin.Int [fake_override]
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY FAKE_OVERRIDE name:id visibility:public modality:ABSTRACT [fake_override,val]
                      overridden:
                        public abstract fun <get-id> (): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  PROPERTY FAKE_OVERRIDE name:lastName visibility:public modality:ABSTRACT [fake_override,val]
                    annotations:
                      Order(order = 1)
                    overridden:
                      public abstract lastName: kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                    FUN FAKE_OVERRIDE name:<get-lastName> visibility:public modality:ABSTRACT returnType:kotlin.String [fake_override]
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                      correspondingProperty: PROPERTY FAKE_OVERRIDE name:lastName visibility:public modality:ABSTRACT [fake_override,val]
                      overridden:
                        public abstract fun <get-lastName> (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope0 visibility:public modality:ABSTRACT [val]
                    annotations:
                      ScopeProperty
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope0> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope0 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope1 visibility:public modality:ABSTRACT [val]
                    annotations:
                      ScopeProperty
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope1> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope1
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope1 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope2 visibility:public modality:ABSTRACT [val]
                    annotations:
                      ScopeProperty
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope2> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope2
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope2 visibility:public modality:ABSTRACT [val]
                  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope3 visibility:public modality:ABSTRACT [val]
                    annotations:
                      ScopeProperty
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope3> visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope3
                      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFrameTokenContentKey] name:scope3 visibility:public modality:ABSTRACT [val]
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int>): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> declared in org.jetbrains.kotlinx.dataframe.annotations.test'
                  CALL 'public final fun with <T, C, R> (<this>: org.jetbrains.kotlinx.dataframe.api.Convert<T of org.jetbrains.kotlinx.dataframe.api.with, C of org.jetbrains.kotlinx.dataframe.api.with>, infer: org.jetbrains.kotlinx.dataframe.api.Infer, rowConverter: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.DataRow<T of org.jetbrains.kotlinx.dataframe.api.with>, @[ParameterName(name = "it")] C of org.jetbrains.kotlinx.dataframe.api.with, R of org.jetbrains.kotlinx.dataframe.api.with>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.with> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> origin=null
                    TYPE_ARG T: org.jetbrains.kotlinx.dataframe.annotations.Schema
                    TYPE_ARG C: kotlin.Int
                    TYPE_ARG R: kotlin.String
                    ARG <this>: GET_VAR 'it: org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>' type=org.jetbrains.kotlinx.dataframe.api.Convert<org.jetbrains.kotlinx.dataframe.annotations.Schema, kotlin.Int> origin=null
                    ARG rowConverter: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>, kotlin.Int, kotlin.String> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.String
                        VALUE_PARAMETER kind:ExtensionReceiver name:$this$with index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>
                        VALUE_PARAMETER kind:Regular name:it index:1 type:kotlin.Int
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='local final fun <anonymous> ($this$with: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>, it: kotlin.Int): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>'
                            CALL 'public open fun toString (): kotlin.String declared in kotlin.Int' type=kotlin.String origin=null
                              ARG <this>: GET_VAR 'it: kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.<anonymous>' type=kotlin.Int origin=null
      VAR name:gr1 type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> [val]
        CALL 'public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0' type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Group_041> origin=GET_PROPERTY
          ARG <this>(index:0): CONSTRUCTOR_CALL 'public constructor <init> () declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0 origin=null
          ARG <this>(index:1): GET_VAR 'val df1: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> origin=null
      VAR name:fr1 type:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> [val]
        CALL 'public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsScope<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41I>): org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0' type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Frame_041>> origin=GET_PROPERTY
          ARG <this>(index:0): CONSTRUCTOR_CALL 'public constructor <init> () declared in org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0' type=org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Scope0 origin=null
          ARG <this>(index:1): GET_VAR 'val df1: org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> declared in org.jetbrains.kotlinx.dataframe.annotations.test' type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.test.<anonymous>.Schema_41> origin=null
FILE fqName:org.jetbrains.kotlinx.dataframe.io fileName:/schemaReaderDeclaration.kt
  CLASS INTERFACE name:DataFrameProvider modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:default visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
    FUN name:read visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
      VALUE_PARAMETER kind:Regular name:path index:1 type:kotlin.String
    PROPERTY name:schemaKType visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-schemaKType> visibility:public modality:ABSTRACT returnType:kotlin.reflect.KType
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.DataFrameProvider<T of org.jetbrains.kotlinx.dataframe.io.DataFrameProvider>
        correspondingProperty: PROPERTY name:schemaKType visibility:public modality:ABSTRACT [val]
  CLASS INTERFACE name:SchemaReader modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:org.jetbrains.kotlinx.dataframe.io.SchemaReader
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:accepts visibility:public modality:ABSTRACT returnType:kotlin.Boolean
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.SchemaReader
      VALUE_PARAMETER kind:Regular name:path index:1 type:kotlin.String
    FUN name:default visibility:public modality:OPEN returnType:org.jetbrains.kotlinx.dataframe.DataFrame<*>
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.SchemaReader
      VALUE_PARAMETER kind:Regular name:path index:1 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun default (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader'
          CALL 'public abstract fun read (path: kotlin.String): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
            ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.io.SchemaReader declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader.default' type=org.jetbrains.kotlinx.dataframe.io.SchemaReader origin=IMPLICIT_ARGUMENT
            ARG path: GET_VAR 'path: kotlin.String declared in org.jetbrains.kotlinx.dataframe.io.SchemaReader.default' type=kotlin.String origin=null
    FUN name:read visibility:public modality:ABSTRACT returnType:org.jetbrains.kotlinx.dataframe.DataFrame<*>
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.io.SchemaReader
      VALUE_PARAMETER kind:Regular name:path index:1 type:kotlin.String
FILE fqName:<root> fileName:/testUtils.kt
  CLASS CLASS name:AcceptableNullabilityMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.AcceptableNullabilityMismatch
    PROPERTY name:path visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.AcceptableNullabilityMismatch.<init>' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-path> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnPath
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
        correspondingProperty: PROPERTY name:path visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-path> (): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.AcceptableNullabilityMismatch'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.<get-path>' type=<root>.AcceptableNullabilityMismatch origin=null
    PROPERTY name:compile visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'compile: kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch.<init>' type=kotlin.reflect.KType origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-compile> visibility:public modality:FINAL returnType:kotlin.reflect.KType
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
        correspondingProperty: PROPERTY name:compile visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-compile> (): kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.<get-compile>' type=<root>.AcceptableNullabilityMismatch origin=null
    PROPERTY name:runtime visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'runtime: kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch.<init>' type=kotlin.reflect.KType origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-runtime> visibility:public modality:FINAL returnType:kotlin.reflect.KType
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
        correspondingProperty: PROPERTY name:runtime visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-runtime> (): kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.<get-runtime>' type=<root>.AcceptableNullabilityMismatch origin=null
    CONSTRUCTOR visibility:public returnType:<root>.AcceptableNullabilityMismatch [primary]
      VALUE_PARAMETER kind:Regular name:path index:0 type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath
      VALUE_PARAMETER kind:Regular name:compile index:1 type:kotlin.reflect.KType
      VALUE_PARAMETER kind:Regular name:runtime index:2 type:kotlin.reflect.KType
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AcceptableNullabilityMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]' type=kotlin.Unit
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnPath [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.AcceptableNullabilityMismatch'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.component1' type=<root>.AcceptableNullabilityMismatch origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL returnType:kotlin.reflect.KType [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component2 (): kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.component2' type=<root>.AcceptableNullabilityMismatch origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component3 visibility:public modality:FINAL returnType:kotlin.reflect.KType [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component3 (): kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.component3' type=<root>.AcceptableNullabilityMismatch origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL returnType:<root>.AcceptableNullabilityMismatch
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      VALUE_PARAMETER kind:Regular name:path index:1 type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.copy' type=<root>.AcceptableNullabilityMismatch origin=null
      VALUE_PARAMETER kind:Regular name:compile index:2 type:kotlin.reflect.KType
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.copy' type=<root>.AcceptableNullabilityMismatch origin=null
      VALUE_PARAMETER kind:Regular name:runtime index:3 type:kotlin.reflect.KType
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
            receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.copy' type=<root>.AcceptableNullabilityMismatch origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath, compile: kotlin.reflect.KType, runtime: kotlin.reflect.KType): <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch'
          CONSTRUCTOR_CALL 'public constructor <init> (path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath, compile: kotlin.reflect.KType, runtime: kotlin.reflect.KType) declared in <root>.AcceptableNullabilityMismatch' type=<root>.AcceptableNullabilityMismatch origin=null
            ARG path: GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.AcceptableNullabilityMismatch.copy' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
            ARG compile: GET_VAR 'compile: kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch.copy' type=kotlin.reflect.KType origin=null
            ARG runtime: GET_VAR 'runtime: kotlin.reflect.KType declared in <root>.AcceptableNullabilityMismatch.copy' type=kotlin.reflect.KType origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Mismatch
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              ARG arg0: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
              ARG arg1: GET_VAR 'other: kotlin.Any? declared in <root>.AcceptableNullabilityMismatch.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.AcceptableNullabilityMismatch
              GET_VAR 'other: kotlin.Any? declared in <root>.AcceptableNullabilityMismatch.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.AcceptableNullabilityMismatch [val]
          TYPE_OP type=<root>.AcceptableNullabilityMismatch origin=IMPLICIT_CAST typeOperand=<root>.AcceptableNullabilityMismatch
            GET_VAR 'other: kotlin.Any? declared in <root>.AcceptableNullabilityMismatch.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                  receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                  receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                  receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.equals' type=<root>.AcceptableNullabilityMismatch origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.AcceptableNullabilityMismatch'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Mismatch
      BLOCK_BODY
        VAR name:result type:kotlin.Int [var]
          CALL 'public open fun hashCode (): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.columns.ColumnPath' type=kotlin.Int origin=null
            ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.hashCode' type=<root>.AcceptableNullabilityMismatch origin=null
        SET_VAR 'var result: kotlin.Int declared in <root>.AcceptableNullabilityMismatch.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
            ARG <this>: CALL 'public final fun times (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
              ARG <this>: GET_VAR 'var result: kotlin.Int declared in <root>.AcceptableNullabilityMismatch.hashCode' type=kotlin.Int origin=null
              ARG other: CONST Int type=kotlin.Int value=31
            ARG other: CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.reflect.KType' type=kotlin.Int origin=null
              ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.hashCode' type=<root>.AcceptableNullabilityMismatch origin=null
        SET_VAR 'var result: kotlin.Int declared in <root>.AcceptableNullabilityMismatch.hashCode' type=kotlin.Unit origin=EQ
          CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
            ARG <this>: CALL 'public final fun times (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
              ARG <this>: GET_VAR 'var result: kotlin.Int declared in <root>.AcceptableNullabilityMismatch.hashCode' type=kotlin.Int origin=null
              ARG other: CONST Int type=kotlin.Int value=31
            ARG other: CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.reflect.KType' type=kotlin.Int origin=null
              ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
                receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.hashCode' type=<root>.AcceptableNullabilityMismatch origin=null
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.AcceptableNullabilityMismatch'
          GET_VAR 'var result: kotlin.Int declared in <root>.AcceptableNullabilityMismatch.hashCode' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN returnType:kotlin.String
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.AcceptableNullabilityMismatch
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Mismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.AcceptableNullabilityMismatch'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="AcceptableNullabilityMismatch("
            CONST String type=kotlin.String value="path="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:path type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.toString' type=<root>.AcceptableNullabilityMismatch origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="compile="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:compile type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.toString' type=<root>.AcceptableNullabilityMismatch origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="runtime="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:runtime type:kotlin.reflect.KType visibility:private [final]' type=kotlin.reflect.KType origin=null
              receiver: GET_VAR '<this>: <root>.AcceptableNullabilityMismatch declared in <root>.AcceptableNullabilityMismatch.toString' type=<root>.AcceptableNullabilityMismatch origin=null
            CONST String type=kotlin.String value=")"
  CLASS CLASS name:ErrorMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.ErrorMismatch
    PROPERTY name:message visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'message: kotlin.String declared in <root>.ErrorMismatch.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-message> visibility:public modality:FINAL returnType:kotlin.String
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
        correspondingProperty: PROPERTY name:message visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-message> (): kotlin.String declared in <root>.ErrorMismatch'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.<get-message>' type=<root>.ErrorMismatch origin=null
    CONSTRUCTOR visibility:public returnType:<root>.ErrorMismatch [primary]
      VALUE_PARAMETER kind:Regular name:message index:0 type:kotlin.String
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:ErrorMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]' type=kotlin.Unit
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL returnType:kotlin.String [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): kotlin.String declared in <root>.ErrorMismatch'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
            receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.component1' type=<root>.ErrorMismatch origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL returnType:<root>.ErrorMismatch
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
      VALUE_PARAMETER kind:Regular name:message index:1 type:kotlin.String
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
            receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.copy' type=<root>.ErrorMismatch origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (message: kotlin.String): <root>.ErrorMismatch declared in <root>.ErrorMismatch'
          CONSTRUCTOR_CALL 'public constructor <init> (message: kotlin.String) declared in <root>.ErrorMismatch' type=<root>.ErrorMismatch origin=null
            ARG message: GET_VAR 'message: kotlin.String declared in <root>.ErrorMismatch.copy' type=kotlin.String origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Mismatch
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              ARG arg0: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.equals' type=<root>.ErrorMismatch origin=null
              ARG arg1: GET_VAR 'other: kotlin.Any? declared in <root>.ErrorMismatch.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.ErrorMismatch'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.ErrorMismatch
              GET_VAR 'other: kotlin.Any? declared in <root>.ErrorMismatch.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.ErrorMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:<root>.ErrorMismatch [val]
          TYPE_OP type=<root>.ErrorMismatch origin=IMPLICIT_CAST typeOperand=<root>.ErrorMismatch
            GET_VAR 'other: kotlin.Any? declared in <root>.ErrorMismatch.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                  receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.equals' type=<root>.ErrorMismatch origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                  receiver: GET_VAR 'val tmp_1: <root>.ErrorMismatch declared in <root>.ErrorMismatch.equals' type=<root>.ErrorMismatch origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.ErrorMismatch'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.ErrorMismatch'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Mismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.ErrorMismatch'
          CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=null
            ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.hashCode' type=<root>.ErrorMismatch origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN returnType:kotlin.String
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ErrorMismatch
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Mismatch
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.ErrorMismatch'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="ErrorMismatch("
            CONST String type=kotlin.String value="message="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:message type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.ErrorMismatch declared in <root>.ErrorMismatch.toString' type=<root>.ErrorMismatch origin=null
            CONST String type=kotlin.String value=")"
  CLASS INTERFACE name:Mismatch modality:SEALED visibility:public superTypes:[kotlin.Any]
    sealedSubclasses:
      CLASS CLASS name:AcceptableNullabilityMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]
      CLASS CLASS name:ErrorMismatch modality:FINAL visibility:public [data] superTypes:[<root>.Mismatch]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.Mismatch
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
  FUN name:assert visibility:public modality:FINAL returnType:kotlin.collections.List<<root>.Mismatch> [inline]
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:true
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert>
    VALUE_PARAMETER kind:Regular name:print index:1 type:kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=false
    BLOCK_BODY
      VAR name:mismatches type:kotlin.collections.MutableList<<root>.Mismatch> [val]
        CALL 'public final fun mutableListOf <T> (): kotlin.collections.MutableList<T of kotlin.collections.mutableListOf> declared in kotlin.collections' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
          TYPE_ARG T: <root>.Mismatch
      CALL 'public final fun equals (compile: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, mismatches: kotlin.collections.MutableList<<root>.Mismatch>, path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        ARG compile: CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T of <root>.assert
          ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert> declared in <root>.assert' type=org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert> origin=IMPLICIT_ARGUMENT
        ARG runtime: CALL 'public final fun schema (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert> declared in <root>.assert' type=org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert> origin=IMPLICIT_ARGUMENT
        ARG mismatches: GET_VAR 'val mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.assert' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
        ARG path: CALL 'public final fun pathOf (vararg columnNames: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: GET_VAR 'print: kotlin.Boolean declared in <root>.assert' type=kotlin.Boolean origin=null
          then: BLOCK type=kotlin.Unit origin=null
            CALL 'public final fun println (message: kotlin.Any?): kotlin.Unit declared in kotlin.io' type=kotlin.Unit origin=null
              ARG message: CALL 'public final fun joinToString <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.joinToString>, separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of kotlin.collections.joinToString, kotlin.CharSequence>?): kotlin.String declared in kotlin.collections' type=kotlin.String origin=null
                TYPE_ARG T: <root>.Mismatch
                ARG <this>: GET_VAR 'val mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.assert' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
                ARG separator: CONST String type=kotlin.String value="\n"
        BRANCH
          if: CALL 'public final fun any <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.any>, predicate: kotlin.Function1<T of kotlin.collections.any, kotlin.Boolean>): kotlin.Boolean declared in kotlin.collections' type=kotlin.Boolean origin=null
            TYPE_ARG T: <root>.Mismatch
            ARG <this>: GET_VAR 'val mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.assert' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
            ARG predicate: FUN_EXPR type=kotlin.Function1<<root>.Mismatch, kotlin.Boolean> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
                VALUE_PARAMETER kind:Regular name:it index:0 type:<root>.Mismatch
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: <root>.Mismatch): kotlin.Boolean declared in <root>.assert'
                    TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=<root>.ErrorMismatch
                      GET_VAR 'it: <root>.Mismatch declared in <root>.assert.<anonymous>' type=<root>.Mismatch origin=null
          then: BLOCK type=kotlin.Unit origin=null
            CALL 'public final fun error (message: kotlin.Any): kotlin.Nothing declared in kotlin' type=kotlin.Nothing origin=null
              ARG message: CALL 'public final fun joinToString <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.joinToString>, separator: kotlin.CharSequence, prefix: kotlin.CharSequence, postfix: kotlin.CharSequence, limit: kotlin.Int, truncated: kotlin.CharSequence, transform: kotlin.Function1<T of kotlin.collections.joinToString, kotlin.CharSequence>?): kotlin.String declared in kotlin.collections' type=kotlin.String origin=null
                TYPE_ARG T: <root>.Mismatch
                ARG <this>: GET_VAR 'val mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.assert' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
                ARG separator: CONST String type=kotlin.String value="\n"
      RETURN type=kotlin.Nothing from='public final fun assert <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.assert>, print: kotlin.Boolean): kotlin.collections.List<<root>.Mismatch> declared in <root>'
        GET_VAR 'val mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.assert' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
  FUN name:compare visibility:public modality:FINAL returnType:kotlin.Unit
    VALUE_PARAMETER kind:Regular name:runtime index:0 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
    VALUE_PARAMETER kind:Regular name:schemas index:1 type:kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>
    VALUE_PARAMETER kind:Regular name:strict index:2 type:kotlin.Boolean
    BLOCK_BODY
      VAR name:schema type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun first <T> (<this>: kotlin.collections.List<T of kotlin.collections.first>): T of kotlin.collections.first declared in kotlin.collections' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
          ARG <this>: GET_VAR 'schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> declared in <root>.compare' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
      VAR name:compare type:org.jetbrains.kotlinx.dataframe.schema.CompareResult [val]
        CALL 'public abstract fun compare (other: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, comparisonMode: org.jetbrains.kotlinx.dataframe.schema.ComparisonMode): org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
          ARG <this>: GET_VAR 'runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG other: GET_VAR 'val schema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
      CALL 'public final fun require (value: kotlin.Boolean, lazyMessage: kotlin.Function0<kotlin.Any>): kotlin.Unit declared in kotlin' type=kotlin.Unit origin=null
        ARG value: WHEN type=kotlin.Boolean origin=ANDAND
          BRANCH
            if: CALL 'public final fun all <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.all>, predicate: kotlin.Function1<T of kotlin.collections.all, kotlin.Boolean>): kotlin.Boolean declared in kotlin.collections' type=kotlin.Boolean origin=null
              TYPE_ARG T: kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>
              ARG <this>: CALL 'public final fun zipWithNext <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.zipWithNext>): kotlin.collections.List<kotlin.Pair<T of kotlin.collections.zipWithNext, T of kotlin.collections.zipWithNext>> declared in kotlin.collections' type=kotlin.collections.List<kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>> origin=null
                TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
                ARG <this>: GET_VAR 'schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> declared in <root>.compare' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
              ARG predicate: FUN_EXPR type=kotlin.Function1<kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>, kotlin.Boolean> origin=LAMBDA
                FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Boolean
                  VALUE_PARAMETER DESTRUCTURED_OBJECT_PARAMETER kind:Regular name:<destruct> index:0 type:kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>
                  BLOCK_BODY
                    VAR IR_DESTRUCTURED_PARAMETER_VARIABLE name:a type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
                      CALL 'public final fun component1 (): A of kotlin.Pair declared in kotlin.Pair' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=COMPONENT_N(index=1)
                        ARG <this>: GET_VAR '<destruct>: kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> declared in <root>.compare.<anonymous>' type=kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
                    VAR IR_DESTRUCTURED_PARAMETER_VARIABLE name:b type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
                      CALL 'public final fun component2 (): B of kotlin.Pair declared in kotlin.Pair' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=COMPONENT_N(index=2)
                        ARG <this>: GET_VAR '<destruct>: kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> declared in <root>.compare.<anonymous>' type=kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
                    RETURN type=kotlin.Nothing from='local final fun <anonymous> (<destruct>: kotlin.Pair<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>): kotlin.Boolean declared in <root>.compare'
                      CALL 'public final fun isEqual (): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.schema.CompareResult' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public abstract fun compare (other: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, comparisonMode: org.jetbrains.kotlinx.dataframe.schema.ComparisonMode): org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
                          ARG <this>: GET_VAR 'val a: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
                          ARG other: GET_VAR 'val b: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            then: WHEN type=kotlin.Boolean origin=IF
              BRANCH
                if: GET_VAR 'strict: kotlin.Boolean declared in <root>.compare' type=kotlin.Boolean origin=null
                then: CALL 'public final fun isEqual (): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.schema.CompareResult' type=kotlin.Boolean origin=null
                  ARG <this>: GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public final fun isSuperOrEqual (): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.schema.CompareResult' type=kotlin.Boolean origin=null
                  ARG <this>: GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Boolean type=kotlin.Boolean value=false
        ARG lazyMessage: FUN_EXPR type=kotlin.Function0<kotlin.Any> origin=LAMBDA
          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Any
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlin.Any declared in <root>.compare'
                CALL 'public final fun buildString (builderAction: @[ExtensionFunctionType] kotlin.Function1<java.lang.StringBuilder, kotlin.Unit>): kotlin.String declared in kotlin.text' type=kotlin.String origin=null
                  ARG builderAction: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<java.lang.StringBuilder, kotlin.Unit> origin=LAMBDA
                    FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                      VALUE_PARAMETER kind:ExtensionReceiver name:$this$buildString index:0 type:java.lang.StringBuilder
                      BLOCK_BODY
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compare.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: STRING_CONCATENATION type=kotlin.String
                              CONST String type=kotlin.String value="Comparison result: "
                              GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compare.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CONST String type=kotlin.String value="Runtime:"
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compare.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CALL 'public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.String origin=null
                              ARG <this>: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                                GET_VAR 'runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
                        CALL 'public final fun forEachIndexed <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.forEachIndexed>, action: kotlin.Function2<@[ParameterName(name = "index")] kotlin.Int, T of kotlin.collections.forEachIndexed, kotlin.Unit>): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=null
                          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
                          ARG <this>: GET_VAR 'schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> declared in <root>.compare' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
                          ARG action: FUN_EXPR type=kotlin.Function2<kotlin.Int, org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, kotlin.Unit> origin=LAMBDA
                            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                              VALUE_PARAMETER kind:Regular name:i index:0 type:kotlin.Int
                              VALUE_PARAMETER kind:Regular name:schema index:1 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
                              BLOCK_BODY
                                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                  CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                                    ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compare.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                                    ARG value: STRING_CONCATENATION type=kotlin.String
                                      CONST String type=kotlin.String value="Compile "
                                      GET_VAR 'i: kotlin.Int declared in <root>.compare.<anonymous>.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                                  CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                                    ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compare.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                                    ARG value: CALL 'public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.String origin=null
                                      ARG <this>: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                                        GET_VAR 'schema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compare.<anonymous>.<anonymous>.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
  FUN name:compareSchemas visibility:public modality:FINAL returnType:kotlin.Unit [inline]
    TYPE_PARAMETER name:T1 index:0 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T2 index:1 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T3 index:2 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T4 index:3 variance: superTypes:[kotlin.Any?] reified:true
    VALUE_PARAMETER kind:Regular name:df1 index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df2 index:1 type:org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df3 index:2 type:org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df4 index:3 type:org.jetbrains.kotlinx.dataframe.DataFrame<T4 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:strict index:4 type:kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=true
    BLOCK_BODY
      VAR name:runtime type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun schema (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema1 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T1 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema2 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T2 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df2: org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> origin=null
      VAR name:schema3 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T3 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df3: org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas> origin=null
      VAR name:schema4 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T4 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df4: org.jetbrains.kotlinx.dataframe.DataFrame<T4 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T4 of <root>.compareSchemas> origin=null
      CALL 'public final fun compare (runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>, strict: kotlin.Boolean): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        ARG runtime: GET_VAR 'val runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG schemas: CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.listOf): kotlin.collections.List<T of kotlin.collections.listOf> declared in kotlin.collections' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
          ARG elements: VARARG type=kotlin.Array<out org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> varargElementType=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
            GET_VAR 'val schema1: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema2: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema3: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema4: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG strict: GET_VAR 'strict: kotlin.Boolean declared in <root>.compareSchemas' type=kotlin.Boolean origin=null
  FUN name:compareSchemas visibility:public modality:FINAL returnType:kotlin.Unit [inline]
    TYPE_PARAMETER name:T1 index:0 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T2 index:1 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T3 index:2 variance: superTypes:[kotlin.Any?] reified:true
    VALUE_PARAMETER kind:Regular name:df1 index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df2 index:1 type:org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df3 index:2 type:org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:strict index:3 type:kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=true
    BLOCK_BODY
      VAR name:runtime type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun schema (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema1 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T1 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema2 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T2 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df2: org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> origin=null
      VAR name:schema3 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T3 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df3: org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T3 of <root>.compareSchemas> origin=null
      CALL 'public final fun compare (runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>, strict: kotlin.Boolean): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        ARG runtime: GET_VAR 'val runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG schemas: CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.listOf): kotlin.collections.List<T of kotlin.collections.listOf> declared in kotlin.collections' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
          ARG elements: VARARG type=kotlin.Array<out org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> varargElementType=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
            GET_VAR 'val schema1: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema2: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema3: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG strict: GET_VAR 'strict: kotlin.Boolean declared in <root>.compareSchemas' type=kotlin.Boolean origin=null
  FUN name:compareSchemas visibility:public modality:FINAL returnType:kotlin.Unit [inline]
    TYPE_PARAMETER name:T1 index:0 variance: superTypes:[kotlin.Any?] reified:true
    TYPE_PARAMETER name:T2 index:1 variance: superTypes:[kotlin.Any?] reified:true
    VALUE_PARAMETER kind:Regular name:df1 index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:df2 index:1 type:org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:strict index:2 type:kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=true
    BLOCK_BODY
      VAR name:runtime type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun schema (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema1 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T1 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df1: org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T1 of <root>.compareSchemas> origin=null
      VAR name:schema2 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T2 of <root>.compareSchemas
          ARG <this>: GET_VAR 'df2: org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T2 of <root>.compareSchemas> origin=null
      CALL 'public final fun compare (runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, schemas: kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema>, strict: kotlin.Boolean): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        ARG runtime: GET_VAR 'val runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG schemas: CALL 'public final fun listOf <T> (vararg elements: T of kotlin.collections.listOf): kotlin.collections.List<T of kotlin.collections.listOf> declared in kotlin.collections' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> origin=null
          TYPE_ARG T: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
          ARG elements: VARARG type=kotlin.Array<out org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema> varargElementType=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
            GET_VAR 'val schema1: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
            GET_VAR 'val schema2: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG strict: GET_VAR 'strict: kotlin.Boolean declared in <root>.compareSchemas' type=kotlin.Boolean origin=null
  FUN name:compareSchemas visibility:public modality:FINAL returnType:kotlin.Unit [inline]
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:true
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.compareSchemas>
    VALUE_PARAMETER kind:Regular name:strict index:1 type:kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=false
    BLOCK_BODY
      VAR name:schema type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun schema (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.compareSchemas> origin=IMPLICIT_ARGUMENT
      VAR name:compileTimeSchema type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema [val]
        CALL 'public final fun compileTimeSchema <T> (<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.compileTimeSchema>): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          TYPE_ARG T: T of <root>.compareSchemas
          ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.compareSchemas> declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.DataFrame<T of <root>.compareSchemas> origin=IMPLICIT_ARGUMENT
      VAR name:compare type:org.jetbrains.kotlinx.dataframe.schema.CompareResult [val]
        CALL 'public abstract fun compare (other: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, comparisonMode: org.jetbrains.kotlinx.dataframe.schema.ComparisonMode): org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
          ARG <this>: GET_VAR 'val compileTimeSchema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
          ARG other: GET_VAR 'val schema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
      CALL 'public final fun require (value: kotlin.Boolean, lazyMessage: kotlin.Function0<kotlin.Any>): kotlin.Unit declared in kotlin' type=kotlin.Unit origin=null
        ARG value: WHEN type=kotlin.Boolean origin=IF
          BRANCH
            if: GET_VAR 'strict: kotlin.Boolean declared in <root>.compareSchemas' type=kotlin.Boolean origin=null
            then: CALL 'public final fun isEqual (): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.schema.CompareResult' type=kotlin.Boolean origin=null
              ARG <this>: GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CALL 'public final fun isSuperOrEqual (): kotlin.Boolean declared in org.jetbrains.kotlinx.dataframe.schema.CompareResult' type=kotlin.Boolean origin=null
              ARG <this>: GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
        ARG lazyMessage: FUN_EXPR type=kotlin.Function0<kotlin.Any> origin=LAMBDA
          FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Any
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='local final fun <anonymous> (): kotlin.Any declared in <root>.compareSchemas'
                CALL 'public final fun buildString (builderAction: @[ExtensionFunctionType] kotlin.Function1<java.lang.StringBuilder, kotlin.Unit>): kotlin.String declared in kotlin.text' type=kotlin.String origin=null
                  ARG builderAction: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<java.lang.StringBuilder, kotlin.Unit> origin=LAMBDA
                    FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                      VALUE_PARAMETER kind:ExtensionReceiver name:$this$buildString index:0 type:java.lang.StringBuilder
                      BLOCK_BODY
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compareSchemas.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: STRING_CONCATENATION type=kotlin.String
                              CONST String type=kotlin.String value="Comparison result: "
                              GET_VAR 'val compare: org.jetbrains.kotlinx.dataframe.schema.CompareResult declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.CompareResult origin=null
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compareSchemas.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CONST String type=kotlin.String value="Runtime:"
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compareSchemas.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CALL 'public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.String origin=null
                              ARG <this>: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                                GET_VAR 'val schema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compareSchemas.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CONST String type=kotlin.String value="Compile:"
                        TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                          CALL 'public final fun appendLine (<this>: java.lang.StringBuilder, value: kotlin.String?): java.lang.StringBuilder declared in kotlin.text' type=java.lang.StringBuilder origin=null
                            ARG <this>: GET_VAR '$this$buildString: java.lang.StringBuilder declared in <root>.compareSchemas.<anonymous>.<anonymous>' type=java.lang.StringBuilder origin=IMPLICIT_ARGUMENT
                            ARG value: CALL 'public open fun toString (): kotlin.String declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.String origin=null
                              ARG <this>: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                                GET_VAR 'val compileTimeSchema: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.compareSchemas' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
  FUN name:equals visibility:public modality:FINAL returnType:kotlin.Unit
    VALUE_PARAMETER kind:Regular name:compile index:0 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
    VALUE_PARAMETER kind:Regular name:runtime index:1 type:org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema
    VALUE_PARAMETER kind:Regular name:mismatches index:2 type:kotlin.collections.MutableList<<root>.Mismatch>
    VALUE_PARAMETER kind:Regular name:path index:3 type:org.jetbrains.kotlinx.dataframe.columns.ColumnPath
    BLOCK_BODY
      CALL 'public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] K of kotlin.collections.Map, in @[EnhancedNullability] V of kotlin.collections.Map>): kotlin.Unit declared in kotlin.collections.Map' type=kotlin.Unit origin=null
        ARG <this>: CALL 'public abstract fun <get-columns> (): kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> origin=GET_PROPERTY
          ARG <this>: GET_VAR 'runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
        ARG p0: TYPE_OP type=java.util.function.BiConsumer<kotlin.Any?, kotlin.Any?> origin=SAM_CONVERSION typeOperand=java.util.function.BiConsumer<kotlin.Any?, kotlin.Any?>
          TYPE_OP type=kotlin.Function2<@[EnhancedNullability] kotlin.Any?, @[EnhancedNullability] kotlin.Any?, kotlin.Unit> origin=IMPLICIT_CAST typeOperand=kotlin.Function2<@[EnhancedNullability] kotlin.Any?, @[EnhancedNullability] kotlin.Any?, kotlin.Unit>
            FUN_EXPR type=kotlin.Function2<@[EnhancedNullability] kotlin.String, @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:name index:0 type:@[EnhancedNullability] kotlin.String
                VALUE_PARAMETER kind:Regular name:runtimeColumnSchema index:1 type:@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                BLOCK_BODY
                  VAR name:compileColumnSchema type:org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? [val]
                    CALL 'public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? declared in kotlin.collections.Map' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=GET_ARRAY_ELEMENT
                      ARG <this>: CALL 'public abstract fun <get-columns> (): kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> origin=GET_PROPERTY
                        ARG <this>: GET_VAR 'compile: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
                      ARG key: TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
                        GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                        ARG arg0: GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                        ARG arg1: CONST Null type=kotlin.Nothing? value=null
                      then: CALL 'public final fun error (message: kotlin.Any): kotlin.Nothing declared in kotlin' type=kotlin.Nothing origin=null
                        ARG message: STRING_CONCATENATION type=kotlin.String
                          CONST String type=kotlin.String value="No column "
                          GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                          CONST String type=kotlin.String value=" found in: "
                          CALL 'public final fun map <T, R> (<this>: kotlin.collections.Iterable<T of kotlin.collections.map>, transform: kotlin.Function1<T of kotlin.collections.map, R of kotlin.collections.map>): kotlin.collections.List<R of kotlin.collections.map> declared in kotlin.collections' type=kotlin.collections.List<org.jetbrains.kotlinx.dataframe.columns.ColumnPath> origin=null
                            TYPE_ARG T: kotlin.String
                            TYPE_ARG R: org.jetbrains.kotlinx.dataframe.columns.ColumnPath
                            ARG <this>: CALL 'public abstract fun <get-keys> (): kotlin.collections.Set<K of kotlin.collections.Map> declared in kotlin.collections.Map' type=kotlin.collections.Set<kotlin.String> origin=GET_PROPERTY
                              ARG <this>: CALL 'public abstract fun <get-columns> (): kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> declared in org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema' type=kotlin.collections.Map<kotlin.String, org.jetbrains.kotlinx.dataframe.schema.ColumnSchema> origin=GET_PROPERTY
                                ARG <this>: GET_VAR 'compile: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=null
                            ARG transform: FUN_EXPR type=kotlin.Function1<kotlin.String, org.jetbrains.kotlinx.dataframe.columns.ColumnPath> origin=LAMBDA
                              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnPath
                                VALUE_PARAMETER kind:Regular name:it index:0 type:kotlin.String
                                BLOCK_BODY
                                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.equals.<anonymous>'
                                    CALL 'public final fun plus (name: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in org.jetbrains.kotlinx.dataframe.columns.ColumnPath' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=PLUS
                                      ARG <this>: GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                                      ARG name: GET_VAR 'it: kotlin.String declared in <root>.equals.<anonymous>.<anonymous>' type=kotlin.String origin=null
                  BLOCK type=kotlin.Unit origin=WHEN
                    VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema [val]
                      GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                    WHEN type=kotlin.Unit origin=WHEN
                      BRANCH
                        if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value
                          GET_VAR 'val tmp_2: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                        then: BLOCK type=kotlin.Unit origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                                ARG <this>: CALL 'public final fun isSubtypeOf (<this>: kotlin.reflect.KType, other: kotlin.reflect.KType): kotlin.Boolean declared in kotlin.reflect.full' type=kotlin.Boolean origin=null
                                  ARG <this>: CALL 'public open fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value' type=kotlin.reflect.KType origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value
                                      GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                                  ARG other: CALL 'public abstract fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=kotlin.reflect.KType origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                      GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun plusAssign <T> (<this>: kotlin.collections.MutableCollection<in T of kotlin.collections.plusAssign>, element: T of kotlin.collections.plusAssign): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
                                  TYPE_ARG T: <root>.ErrorMismatch
                                  ARG <this>: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=PLUSEQ
                                  ARG element: CONSTRUCTOR_CALL 'public constructor <init> (message: kotlin.String) declared in <root>.ErrorMismatch' type=<root>.ErrorMismatch origin=null
                                    ARG message: STRING_CONCATENATION type=kotlin.String
                                      GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                                      CONST String type=kotlin.String value=": "
                                      CALL 'public open fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value' type=kotlin.reflect.KType origin=GET_PROPERTY
                                        ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value
                                          GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                                      CONST String type=kotlin.String value=" is not subtype of "
                                      CALL 'public abstract fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=kotlin.reflect.KType origin=GET_PROPERTY
                                        ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                          GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                            BRANCH
                              if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                                ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                                  ARG arg0: CALL 'public open fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value' type=kotlin.reflect.KType origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value
                                      GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                                  ARG arg1: CALL 'public abstract fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=kotlin.reflect.KType origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                      GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun plusAssign <T> (<this>: kotlin.collections.MutableCollection<in T of kotlin.collections.plusAssign>, element: T of kotlin.collections.plusAssign): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
                                  TYPE_ARG T: <root>.AcceptableNullabilityMismatch
                                  ARG <this>: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=PLUSEQ
                                  ARG element: CONSTRUCTOR_CALL 'public constructor <init> (path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath, compile: kotlin.reflect.KType, runtime: kotlin.reflect.KType) declared in <root>.AcceptableNullabilityMismatch' type=<root>.AcceptableNullabilityMismatch origin=null
                                    ARG path: CALL 'public final fun plus (name: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in org.jetbrains.kotlinx.dataframe.columns.ColumnPath' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=PLUS
                                      ARG <this>: GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                                      ARG name: TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
                                        GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                                    ARG compile: CALL 'public abstract fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=kotlin.reflect.KType origin=GET_PROPERTY
                                      ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                        GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                                    ARG runtime: CALL 'public open fun <get-type> (): kotlin.reflect.KType declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value' type=kotlin.reflect.KType origin=GET_PROPERTY
                                      ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Value
                                        GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                      BRANCH
                        if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group
                          GET_VAR 'val tmp_2: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                        then: BLOCK type=kotlin.Unit origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group
                                TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                  GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun plusAssign <T> (<this>: kotlin.collections.MutableCollection<in T of kotlin.collections.plusAssign>, element: T of kotlin.collections.plusAssign): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
                                  TYPE_ARG T: <root>.ErrorMismatch
                                  ARG <this>: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=PLUSEQ
                                  ARG element: CONSTRUCTOR_CALL 'public constructor <init> (message: kotlin.String) declared in <root>.ErrorMismatch' type=<root>.ErrorMismatch origin=null
                                    ARG message: STRING_CONCATENATION type=kotlin.String
                                      GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                                      CONST String type=kotlin.String value=" of "
                                      CALL 'public abstract fun <get-kind> (): org.jetbrains.kotlinx.dataframe.columns.ColumnKind declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=org.jetbrains.kotlinx.dataframe.columns.ColumnKind origin=GET_PROPERTY
                                        ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                          GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                                      CONST String type=kotlin.String value=" but Group was expected"
                            BRANCH
                              if: CONST Boolean type=kotlin.Boolean value=true
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun equals (compile: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, mismatches: kotlin.collections.MutableList<<root>.Mismatch>, path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
                                  ARG compile: CALL 'public final fun <get-schema> (): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group
                                      GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                                  ARG runtime: CALL 'public final fun <get-schema> (): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Group
                                      GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                                  ARG mismatches: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
                                  ARG path: CALL 'public final fun plus (name: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in org.jetbrains.kotlinx.dataframe.columns.ColumnPath' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=PLUS
                                    ARG <this>: GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                                    ARG name: TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
                                      GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                      BRANCH
                        if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame
                          GET_VAR 'val tmp_2: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                        then: BLOCK type=kotlin.Unit origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame
                                TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                  GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun plusAssign <T> (<this>: kotlin.collections.MutableCollection<in T of kotlin.collections.plusAssign>, element: T of kotlin.collections.plusAssign): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
                                  TYPE_ARG T: <root>.ErrorMismatch
                                  ARG <this>: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=PLUSEQ
                                  ARG element: CONSTRUCTOR_CALL 'public constructor <init> (message: kotlin.String) declared in <root>.ErrorMismatch' type=<root>.ErrorMismatch origin=null
                                    ARG message: STRING_CONCATENATION type=kotlin.String
                                      GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                                      CONST String type=kotlin.String value=" of "
                                      CALL 'public abstract fun <get-kind> (): org.jetbrains.kotlinx.dataframe.columns.ColumnKind declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema' type=org.jetbrains.kotlinx.dataframe.columns.ColumnKind origin=GET_PROPERTY
                                        ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema
                                          GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                                      CONST String type=kotlin.String value=" but Frame was expected"
                            BRANCH
                              if: CONST Boolean type=kotlin.Boolean value=true
                              then: BLOCK type=kotlin.Unit origin=null
                                CALL 'public final fun equals (compile: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, runtime: org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema, mismatches: kotlin.collections.MutableList<<root>.Mismatch>, path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
                                  ARG compile: CALL 'public final fun <get-schema> (): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame
                                      GET_VAR 'val compileColumnSchema: org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? declared in <root>.equals.<anonymous>' type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema? origin=null
                                  ARG runtime: CALL 'public final fun <get-schema> (): org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema declared in org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame' type=org.jetbrains.kotlinx.dataframe.schema.DataFrameSchema origin=GET_PROPERTY
                                    ARG <this>: TYPE_OP type=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame origin=IMPLICIT_CAST typeOperand=org.jetbrains.kotlinx.dataframe.schema.ColumnSchema.Frame
                                      GET_VAR 'runtimeColumnSchema: @[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] org.jetbrains.kotlinx.dataframe.schema.ColumnSchema origin=null
                                  ARG mismatches: GET_VAR 'mismatches: kotlin.collections.MutableList<<root>.Mismatch> declared in <root>.equals' type=kotlin.collections.MutableList<<root>.Mismatch> origin=null
                                  ARG path: CALL 'public final fun plus (name: kotlin.String): org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in org.jetbrains.kotlinx.dataframe.columns.ColumnPath' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=PLUS
                                    ARG <this>: GET_VAR 'path: org.jetbrains.kotlinx.dataframe.columns.ColumnPath declared in <root>.equals' type=org.jetbrains.kotlinx.dataframe.columns.ColumnPath origin=null
                                    ARG name: TYPE_OP type=kotlin.String origin=IMPLICIT_NOTNULL typeOperand=kotlin.String
                                      GET_VAR 'name: @[EnhancedNullability] kotlin.String declared in <root>.equals.<anonymous>' type=@[EnhancedNullability] kotlin.String origin=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun noWhenBranchMatchedException (): kotlin.Nothing declared in kotlin.internal.ir' type=kotlin.Nothing origin=null
FILE fqName:org.jetbrains.kotlinx.dataframe.annotations fileName:org/jetbrains/kotlinx/dataframe/annotations/__GENERATED__CALLABLES__.kt
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:id type:kotlin.Int visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-id> visibility:public modality:FINAL returnType:kotlin.Int
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_id")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Int from='public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): kotlin.Int declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-id>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG name: CONST String type=kotlin.String value="id"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:id type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-id> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_id")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:id visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> from='public final fun <get-id> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-id>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG columnName: CONST String type=kotlin.String value="id"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:lastName type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-lastName> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_lastName")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-lastName>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG name: CONST String type=kotlin.String value="lastName"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:lastName type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-lastName> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_lastName")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:lastName visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-lastName> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-lastName>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG columnName: CONST String type=kotlin.String value="lastName"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:group type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-group> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_group")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> from='public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-group>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG name: CONST String type=kotlin.String value="group"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:group type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-group> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_group")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:group visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> from='public final fun <get-group> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-group>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG columnName: CONST String type=kotlin.String value="group"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:frame type:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-frame> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_frame")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> from='public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-frame>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG name: CONST String type=kotlin.String value="frame"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:frame type:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-frame> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>
      annotations:
        JvmName(name = "Schema_frame")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:frame visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> from='public final fun <get-frame> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema>): org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<org.jetbrains.kotlinx.dataframe.DataFrame<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-frame>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema> origin=null
              ARG columnName: CONST String type=kotlin.String value="frame"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_col")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG name: CONST String type=kotlin.String value="col"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_col")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG columnName: CONST String type=kotlin.String value="col"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col1 type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col1> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_col1")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col1> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col1>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG name: CONST String type=kotlin.String value="col1"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col1 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col1> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_col1")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col1 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col1> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col1>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG columnName: CONST String type=kotlin.String value="col1"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:deepGroup type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-deepGroup> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_deepGroup")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> from='public final fun <get-deepGroup> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-deepGroup>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG name: CONST String type=kotlin.String value="deepGroup"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:deepGroup type:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-deepGroup> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>
      annotations:
        JvmName(name = "Schema_group_deepGroup")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:deepGroup visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> from='public final fun <get-deepGroup> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group>): org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.columns.ColumnGroup<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-deepGroup>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.group> origin=null
              ARG columnName: CONST String type=kotlin.String value="deepGroup"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col2 type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col2> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      annotations:
        JvmName(name = "Schema_deepGroup_col2")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col2> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col2>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=null
              ARG name: CONST String type=kotlin.String value="col2"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col2 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col2> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      annotations:
        JvmName(name = "Schema_deepGroup_col2")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col2 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col2> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col2>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=null
              ARG columnName: CONST String type=kotlin.String value="col2"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col3 type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      annotations:
        JvmName(name = "Schema_deepGroup_col3")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col3>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=null
              ARG name: CONST String type=kotlin.String value="col3"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col3 type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
      annotations:
        JvmName(name = "Schema_frame_col3")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col3>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> origin=null
              ARG name: CONST String type=kotlin.String value="col3"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col3 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>
      annotations:
        JvmName(name = "Schema_deepGroup_col3")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col3>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.deepGroup> origin=null
              ARG columnName: CONST String type=kotlin.String value="col3"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col3 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col3> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
      annotations:
        JvmName(name = "Schema_frame_col3")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col3 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col3> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col3>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> origin=null
              ARG columnName: CONST String type=kotlin.String value="col3"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col4 type:kotlin.String visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col4> visibility:public modality:FINAL returnType:kotlin.String
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
      annotations:
        JvmName(name = "Schema_frame_col4")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.String from='public final fun <get-col4> (<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>): kotlin.String declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=kotlin.String origin=CAST typeOperand=kotlin.String
            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col4>' type=org.jetbrains.kotlinx.dataframe.DataRow<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> origin=null
              ARG name: CONST String type=kotlin.String value="col4"
  PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:col4 type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> visibility:private [final,static]
    FUN GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:<get-col4> visibility:public modality:FINAL returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
      VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>
      annotations:
        JvmName(name = "Schema_frame_col4")
      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlinx.dataframe.plugin.DataFramePlugin] name:col4 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> from='public final fun <get-col4> (<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame>): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> declared in org.jetbrains.kotlinx.dataframe.annotations'
          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.String>
            CALL 'public abstract fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsScope' type=kotlin.Any? origin=null
              ARG <this>: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> declared in org.jetbrains.kotlinx.dataframe.annotations.<get-col4>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<org.jetbrains.kotlinx.dataframe.annotations.Schema.frame> origin=null
              ARG columnName: CONST String type=kotlin.String value="col4"
